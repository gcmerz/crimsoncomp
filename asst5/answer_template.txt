Assignment 5 Questions

Name: Mridu Nanda

################################################################################
################################# TAGS #########################################
################################################################################

1: Briefly explain what a "tag" is. What is the name of the URL pattern that handles requests for the tag page? 
--------------------------------------------------------------------------------
a 'tag' is a type of indicator for subcategory of article (for example: editorial)

name of url:'tagpage'
url(r'^tag/(?P<tagname>[-\'a-zA-Z0-9 ]*)/%s$' % FILTER_URL_RE, 'tag', name='tagpage'),

2: What view handles the tag page?
--------------------------------------------------------------------------------
tag (ie located in views.py line 150)
150 def tag(request, tagname, page=1, sections=None, types=None):


3: Say I wanted the page for the just the tag “Editorials.” What parameter(s) would be passed from the url to the view, and what would their value(s) be?
--------------------------------------------------------------------------------
'name' would be the variable that is passed (and stored as tagname) 
It would have value of "Editiorials"


4: Now say I wanted only the articles with the tag “Editorials” in the “Opinion” section. What parameter(s) would be passed from url to view now, and what would their value(s) be? 
--------------------------------------------------------------------------------
We would have to pass another variable in the url as something like "Opinion". 
This would be set tagname = "Editorials" and sections = "Opinion" in views.py

################################################################################
############################### ARTICLES #######################################
################################################################################

5: What url pattern handles this? What view handles it?
--------------------------------------------------------------------------------
URL:
 44     url(r'^topic/(?P<slug_path>[0-9\w_\-%/]+)/$', 'topic_page',
 45         name='content_topic'),

VIEWS:
 983 def get_content(request, ctype, year, month, day, slug, content_group=None):

6: What type of object (i.e. what class / model) is the variable “c” in this view? 
--------------------------------------------------------------------------------
Content object

7: Which method is ultimately responsible for rendering the article? 
--------------------------------------------------------------------------------
render_to_response 

8: What is its file path? 
--------------------------------------------------------------------------------
crimsononline/content/templates/models/article/page.html

9: Find the div with the id “article-tags” in the template. Explain what is happening in this div. 
--------------------------------------------------------------------------------
This div loops through all the tags to create a url link for each tag 
(let's us cllick on the tag to see the actual page).

################################################################################
######################## BASE TEMPLATE AND SEARCH ##############################
################################################################################

10: What is the purpose of this particular template? 
--------------------------------------------------------------------------------
This is like a starter pack for all the pages on the website containing the
basic, generic information.

11: What are some parts of the website that are defined in `__base.html`? 
--------------------------------------------------------------------------------
masthead_header, footer-sections,

12: What is the url pattern that handles search? 
--------------------------------------------------------------------------------
/search/
url(r'^search/', include('crimsononline.search.urls')),
url(r'^flyby/search/$', TemplateView.as_view(template_name='flyby/search.html')),

13: Describe at a high level how we might implement our own search functionality, say, that searched specifically just tags by the tag name. 
--------------------------------------------------------------------------------
Oh no. We just did something really similar in the last CS50 pset. Basically 
you would have to select all the content objects in the database that have 
the user inputted tag (looking for matching tags).
